import React, { useState, memo, useCallback } from 'react';
import { Row, Col, FormControl, Button } from 'react-bootstrap';
import PropTypes from 'prop-types';
//import {API_KEY, API_BASE_URL} from '../apis/config'
//import Select from './Select';

const unitList = [
  { value: "celsius", label: "Celsius" },
  { value: "farenheit", label: "Farenheit" }
];

const CitySelector = ({ onSearch }) => {
  const [city, setCity] = useState('');
  //const [celsius,  setCelsius] = useState('');
  //const [farenheit, setFarenheit] = useState('');
  const [form, setForm] = useState({
    //country: null,
    //lang: null,
    //city : null,
    unit: null
  });

  const onValidate = (value, name) => {
    setError(prev => ({
      ...prev,
      [name]: { ...prev[name], errorMsg: value }
    }));
  }


  const [error, setError] = useState({
    unit: {
      isReq: true,
      errorMsg: '',
      onValidateFunc: onValidate
    }
  });

  const onHandleChange = useCallback((value, name) => {
    setForm(prev => ({
      ...prev,
      [name]: value
    }));
  }, []);


  const validateForm = () => {
    let isInvalid = false;
    Object.keys(error).forEach(x => {
      const errObj = error[x];
      if (errObj.errorMsg) {
        isInvalid = true;
      } else if (errObj.isReq && !form[x]) {
        isInvalid = true;
        onValidate(true, x);
      }

    });
    return !isInvalid;
  }


  const handleSubmit = (onSearch) => {
    //const [city, setCity] = useState('');
    const isValid = validateForm();
    if (!isValid) {
      console.error('Invalid Form!');
      return false;
    }

    console.log('Data:', form);
  }



  return (
    <>
      <Row>
        <Col>
          <h1>Search your city</h1>
        </Col>
      </Row>

      <Row>
        <Col xl={5}>
          <FormControl
            placeholder="Enter city"
            onChange={(event) => setCity(event.target.value)}
            value={city}
          />

          <Select
            name="unit"
            title="SetUnit"
            value={form.unit}
            options={unitList}
            onChangeFunc={onHandleChange}
            {...error.unit}

          />
        </Col>
      </Row>
      <Row>
        <Col>
          <Button onClick={() => handleSubmit(city)}>Check Weather</Button>

        </Col>
      </Row>
    </>
  );
};

export default CitySelector;